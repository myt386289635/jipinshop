apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply plugin: 'com.mob.sdk'//mobLink
MobSDK {
    appKey "2c7767cc3e614"
    appSecret "88ab4fcfd033fb7960fcb64b5aa35546"
    MobLink {
        uriScheme "jpc://www.jipincheng.cn"
        appLinkHost "aos2.t4m.cn"
    }
}

android {

    //多渠道打包支持
    productFlavors {

        Tencent {//投放应用宝市场
        }
        Baidu {//投放百度市场
        }
        Wandoujia {//投放豌豆荚市场
        }
        Vivo {//投放vivo市场
        }
        Oppo {//投放oppo市场
        }
        Xiaomi {//投放小米市场
        }
        Meizu {//投放魅族市场
        }
        Huawei {//投放华为应用市场
        }
        umeng {//投放其他安卓市场
        }

    }
    //注意我注释掉的，可以去掉注释，那样的话，下面这句就可以不用了
    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }

    signingConfigs {
        release {
            keyAlias 'jipinshop123'
            keyPassword 'jipinshop123'
            storeFile file('E:/android/work/caodan/jipinshop.jks')
            storePassword 'jipinshop123'
        }
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.administrator.jipinshop"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 31
        versionName "2.8.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        // dex突破65535的限制
        multiDexEnabled true
        multiDexKeepFile file('multiDexKeep.txt')
        manifestPlaceholders = [UMENG_CHANNEL_VALUE: "umeng"]//添加一个默认渠道号
        flavorDimensions "versionCode"

        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a','x86', 'x86_64'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME : applicationId,
                JPUSH_APPKEY : "09099048e2130ae6ff8151bc", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.
        ]
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            zipAlignEnabled true
            signingConfig signingConfigs.release
        }
        debug {
            signingConfig signingConfigs.release
            zipAlignEnabled true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dataBinding {
        enabled = true
    }
    // 配置一个路径专门存放kotlin文件
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

kapt {
    generateStubs = true
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0-rc01'
    implementation 'com.android.support:support-v4:28.0.0-rc01'
    implementation 'com.android.support:design:28.0.0-rc01'
    implementation 'com.android.support:cardview-v7:28.0.0-rc01'
    implementation 'com.android.support:exifinterface:28.0.0-rc01'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    testImplementation 'junit:junit:4.12'

    //下面这两个会造成多一个support-annotation:27.1.1@arr的包  目前没发现有什么影响
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    //dagger
    implementation 'com.google.dagger:dagger:2.15'
    kapt 'com.google.dagger:dagger-compiler:2.15'
    api 'com.google.dagger:dagger-android:2.15'
    api('com.google.dagger:dagger-android-support:2.15') {
        exclude module: 'support-v4'
    }
    kapt "com.google.dagger:dagger-android-processor:2.15"//以前使用annotationProcessor，使用kapt是为了kotlin使用

    //retrofit
    api 'com.squareup.retrofit2:retrofit:2.2.0'
    api 'com.squareup.retrofit2:converter-gson:2.2.0'
    api 'com.squareup.retrofit2:adapter-rxjava2:2.2.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.0.1'
    implementation 'com.squareup.okhttp3:okhttp:3.8.0'
    implementation 'com.blankj:utilcode:1.8.1'
    implementation 'com.google.code.gson:gson:2.6.2'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.x.y'

    //沉淀式状态兰
    implementation 'com.gyf.barlibrary:barlibrary:2.3.0'

    //butterknife
    implementation 'com.jakewharton:butterknife:8.6.0'
    kapt 'com.jakewharton:butterknife-compiler:8.6.0' //  // kapt 代替 annotationProcessor

    //上拉刷新和下拉加载
    implementation 'com.github.Aspsine:SwipeToLoadLayout:1.0.4'

    //badgeview
    implementation 'q.rorbin:badgeview:1.1.3'

    //flexbox
    implementation 'com.google.android:flexbox:0.3.2'

    //glide
    api "jp.wasabeef:glide-transformations:4.0.1"

    //    implementation 'jp.wasabeef:glide-transformations:2.0.1'
    implementation 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'

    //eventbus
    implementation 'org.greenrobot:eventbus:3.0.0'

    //AndPermission
    implementation('com.yanzhenjie:permission:2.0.0-rc11') {
        exclude group: 'com.android.support', module: 'support-fragment'
        exclude group: 'com.android.support', module: 'support-core-utils'
        exclude group: 'com.android.support', module: 'support-core-ui'
        exclude group: 'com.android.support', module: 'support-compat'
    }

    //阿里百川的sdk（只为了商品能跳转到天猫）
    //登陆（必须）
    implementation 'com.ali.auth.sdk:alibabauth_core:2.0.0.6@aar'
    implementation 'com.ali.auth.sdk:alibabauth_ui:2.0.0.6@aar'
    implementation 'com.ali.auth.sdk:alibabauth_ext:2.0.0.6@aar'

    //安全基础（必须）
    implementation 'com.taobao.android:securityguardaar3:5.4.171@aar'
    implementation 'com.taobao.android:securitybodyaar3:5.4.99@aar'
    implementation 'com.taobao.android:avmpaar3:5.4.36@aar'
    implementation 'com.taobao.android:sgmiddletieraar3:5.4.9@aar'

    //Mtop网关（必须）
    implementation 'com.taobao.android:mtopsdk_allinone_open:3.1.2.5@jar'

    //applink（必须）
    implementation 'com.alibaba.sdk.android:alibc_link_partner:4.1.10@aar'

    //UT
    implementation 'com.taobao.android:utdid4all:1.1.5.3_proguard'
    implementation 'com.alibaba.mtl:app-monitor-sdk:2.6.4.5_for_bc'

    //电商SDK（必须）
    implementation 'com.alibaba.sdk.android:AlibcTradeCommon:4.0.0.2@aar'
    implementation 'com.alibaba.sdk.android:AlibcTradeBiz:4.0.0.2@aar'
    implementation 'com.alibaba.sdk.android:nb_trade:4.0.0.2@aar'
    implementation 'com.alibaba:fastjson:1.2.41'

    //multidex
    implementation 'com.android.support:multidex:1.0.2'

    //极光
    // 此处以JPush 3.1.5 版本为例。
    implementation 'cn.jiguang.sdk:jpush:3.2.0'
    // 此处以JCore 1.2.3 版本为例。
    implementation 'cn.jiguang.sdk:jcore:1.2.7'

    //leakcanary内存溺出检测
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'

    //RxLifeCycle
    implementation 'com.trello.rxlifecycle2:rxlifecycle-components:2.1.0'

    //bugly集成
    api 'com.tencent.bugly:crashreport:2.2.0'
    api 'com.tencent.bugly:nativecrashreport:3.0'

    //图片浏览功能
    implementation 'com.davemorrissey.labs:subsampling-scale-image-view:3.10.0'

    //友盟统计
    implementation 'com.umeng.umsdk:analytics:8.0.0'

    //腾讯验证码接入
    implementation(name:'captchasdk-release-1.0.2', ext:'aar')

    //kotlin加入
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.40"
    kapt "com.android.databinding:compiler:3.0.0"

    //微信
    api 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'
}
